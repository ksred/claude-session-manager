// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/ksred/claude-session-manager",
        "contact": {
            "name": "Claude Session Manager Support",
            "url": "https://github.com/ksred/claude-session-manager",
            "email": "support@claude-session-manager.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/analytics/costs": {
            "get": {
                "description": "Retrieve cost breakdown by project, model, or day with projections and cache savings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get cost analytics",
                "parameters": [
                    {
                        "enum": [
                            "project",
                            "model",
                            "day"
                        ],
                        "type": "string",
                        "default": "project",
                        "description": "Group costs by",
                        "name": "group_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of days to analyze",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved cost analytics",
                        "schema": {
                            "$ref": "#/definitions/api.CostAnalyticsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/analytics/models": {
            "get": {
                "description": "Retrieve performance statistics for each Claude model including token usage, costs, and cache efficiency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get model performance comparison",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved model performance data",
                        "schema": {
                            "$ref": "#/definitions/api.ModelPerformanceResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/analytics/timeseries": {
            "get": {
                "description": "Retrieve time series data showing sessions, messages, tokens, and costs over time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get time series analytics",
                "parameters": [
                    {
                        "enum": [
                            "day",
                            "week",
                            "month"
                        ],
                        "type": "string",
                        "default": "day",
                        "description": "Time period granularity",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of days to look back",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved time series data",
                        "schema": {
                            "$ref": "#/definitions/api.TimeSeriesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/analytics/tokens/timeline": {
            "get": {
                "description": "Retrieve token usage over time with configurable granularity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get token usage timeline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of hours to look back (default: 24, max: 720)",
                        "name": "hours",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time granularity: minute, hour, day (default: hour)",
                        "name": "granularity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved token timeline",
                        "schema": {
                            "$ref": "#/definitions/api.TokenTimelineResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files/recent": {
            "get": {
                "description": "Retrieve a list of files that were recently modified across all Claude sessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Get recently modified files",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maximum number of files to return (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of files to skip for pagination (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved recent files",
                        "schema": {
                            "$ref": "#/definitions/api.RecentFilesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health status of the Claude Session Manager API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "$ref": "#/definitions/api.HealthResponse"
                        }
                    }
                }
            }
        },
        "/metrics/activity": {
            "get": {
                "description": "Retrieve recent activity timeline including session events and message activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get activity timeline",
                "parameters": [
                    {
                        "maximum": 500,
                        "minimum": 1,
                        "type": "integer",
                        "default": 50,
                        "description": "Maximum number of activities to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved activity timeline",
                        "schema": {
                            "$ref": "#/definitions/api.ActivityResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metrics/summary": {
            "get": {
                "description": "Retrieve overall system metrics including session counts, token usage, and cost estimates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get metrics summary",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved metrics summary",
                        "schema": {
                            "$ref": "#/definitions/api.MetricsSummary"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metrics/usage": {
            "get": {
                "description": "Retrieve detailed usage statistics including daily sessions, model usage, and peak hours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get usage statistics",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved usage statistics",
                        "schema": {
                            "$ref": "#/definitions/api.UsageStats"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/projects/{projectName}/files/recent": {
            "get": {
                "description": "Retrieve files that were recently modified within a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get project recent files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the project",
                        "name": "projectName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of files to return (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by git branch name",
                        "name": "branch",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved project recent files",
                        "schema": {
                            "$ref": "#/definitions/api.ProjectRecentFilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing project name",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/projects/{projectName}/tokens/timeline": {
            "get": {
                "description": "Retrieve token usage over time for a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get project token timeline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the project",
                        "name": "projectName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of hours to look back (default: 168/7 days, max: 720)",
                        "name": "hours",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time granularity: minute, hour, day (default: hour)",
                        "name": "granularity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved project token timeline",
                        "schema": {
                            "$ref": "#/definitions/api.TokenTimelineResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Search across sessions by project name, task description, message content, or file paths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search sessions",
                "parameters": [
                    {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "example": "\"authentication\"",
                        "description": "Search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved search results",
                        "schema": {
                            "$ref": "#/definitions/api.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid search query",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "description": "Retrieve all Claude sessions with their metadata and statistics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Get all sessions",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved sessions",
                        "schema": {
                            "$ref": "#/definitions/api.SessionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/active": {
            "get": {
                "description": "Retrieve all currently active Claude sessions (working or idle status)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Get active sessions",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved active sessions",
                        "schema": {
                            "$ref": "#/definitions/api.SessionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/recent": {
            "get": {
                "description": "Retrieve the most recent Claude sessions with optional limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Get recent sessions",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Maximum number of sessions to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved recent sessions",
                        "schema": {
                            "$ref": "#/definitions/api.SessionsLimitResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/{id}": {
            "get": {
                "description": "Retrieve a specific Claude session by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Get session by ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"session_123456\"",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session found",
                        "schema": {
                            "$ref": "#/definitions/api.SessionResponse"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/{id}/tokens/timeline": {
            "get": {
                "description": "Retrieve token usage over time for a specific session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Get session token timeline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time granularity: minute, hour, day (default: minute)",
                        "name": "granularity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved session token timeline",
                        "schema": {
                            "$ref": "#/definitions/api.TokenTimelineResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "description": "Establish a WebSocket connection for real-time session updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "WebSocket endpoint",
                "responses": {
                    "101": {
                        "description": "WebSocket connection established",
                        "schema": {
                            "$ref": "#/definitions/api.WebSocketMessage"
                        }
                    },
                    "400": {
                        "description": "Failed to upgrade connection",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ActivityEntry": {
            "description": "A single activity entry in the system timeline",
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "User sent a message"
                },
                "session_id": {
                    "type": "string",
                    "example": "session_123456"
                },
                "session_name": {
                    "type": "string",
                    "example": "my-project"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T10:00:00Z"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "message_sent",
                        "session_created",
                        "session_updated",
                        "error"
                    ],
                    "example": "message_sent"
                }
            }
        },
        "api.ActivityResponse": {
            "description": "Activity timeline with entries",
            "type": "object",
            "properties": {
                "activity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ActivityEntry"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "api.CostAnalyticsResponse": {
            "description": "Cost analytics data with breakdown and projections",
            "type": "object",
            "properties": {
                "breakdown": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.CostBreakdownEntry"
                    }
                },
                "cache_savings": {
                    "type": "number",
                    "example": 35.2
                },
                "projection": {
                    "$ref": "#/definitions/api.CostProjection"
                },
                "total_cost": {
                    "type": "number",
                    "example": 125.5
                }
            }
        },
        "api.CostBreakdownEntry": {
            "description": "Cost breakdown for a specific group (project, model, or day)",
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number",
                    "example": 45.3
                },
                "name": {
                    "type": "string",
                    "example": "my-app"
                },
                "percentage": {
                    "type": "number",
                    "example": 0.36
                },
                "sessions": {
                    "type": "integer",
                    "example": 23
                },
                "tokens": {
                    "$ref": "#/definitions/api.TokenBreakdown"
                }
            }
        },
        "api.CostProjection": {
            "description": "Projected cost estimates",
            "type": "object",
            "properties": {
                "daily_average": {
                    "type": "number",
                    "example": 4.18
                },
                "monthly_estimate": {
                    "type": "number",
                    "example": 125.4
                }
            }
        },
        "api.DailySessionCount": {
            "description": "Daily session count information",
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 15
                },
                "date": {
                    "type": "string",
                    "example": "2023-01-01"
                }
            }
        },
        "api.ErrorResponse": {
            "description": "Error response structure",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "details": {
                    "type": "string",
                    "example": "Session with ID 'invalid' does not exist"
                },
                "error": {
                    "type": "string",
                    "example": "Session not found"
                }
            }
        },
        "api.HealthResponse": {
            "description": "Health check response",
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "ok"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T10:00:00Z"
                },
                "uptime": {
                    "type": "string",
                    "example": "2h30m15s"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "api.MetricsSummary": {
            "description": "Overall system metrics and statistics",
            "type": "object",
            "properties": {
                "active_sessions": {
                    "type": "integer",
                    "example": 5
                },
                "average_session_duration_minutes": {
                    "type": "number",
                    "example": 45.2
                },
                "model_usage": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "most_used_model": {
                    "type": "string",
                    "example": "claude-3-opus"
                },
                "total_estimated_cost": {
                    "type": "number",
                    "example": 15.75
                },
                "total_messages": {
                    "type": "integer",
                    "example": 2500
                },
                "total_sessions": {
                    "type": "integer",
                    "example": 150
                },
                "total_tokens_used": {
                    "type": "integer",
                    "example": 125000
                }
            }
        },
        "api.ModelPerformanceEntry": {
            "description": "Performance data for a Claude model with statistics",
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "example": "Claude 3 Opus"
                },
                "model": {
                    "type": "string",
                    "example": "claude-3-opus-20240229"
                },
                "stats": {
                    "$ref": "#/definitions/api.ModelStats"
                }
            }
        },
        "api.ModelPerformanceResponse": {
            "description": "Model performance comparison data",
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ModelPerformanceEntry"
                    }
                }
            }
        },
        "api.ModelStats": {
            "description": "Performance statistics for a Claude model",
            "type": "object",
            "properties": {
                "avg_cost_per_session": {
                    "type": "number",
                    "example": 0.57
                },
                "avg_session_duration_seconds": {
                    "type": "integer",
                    "example": 3600
                },
                "avg_tokens_per_session": {
                    "type": "integer",
                    "example": 27777
                },
                "cache_efficiency": {
                    "type": "number",
                    "example": 0.45
                },
                "total_cost": {
                    "type": "number",
                    "example": 25.5
                },
                "total_sessions": {
                    "type": "integer",
                    "example": 45
                },
                "total_tokens": {
                    "type": "integer",
                    "example": 1250000
                }
            }
        },
        "api.PeakHourInfo": {
            "description": "Peak hour usage information",
            "type": "object",
            "properties": {
                "average_sessions": {
                    "type": "number",
                    "example": 5.2
                },
                "hour": {
                    "type": "integer",
                    "example": 14
                }
            }
        },
        "api.ProjectRecentFile": {
            "description": "File modification information for a specific project",
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "example": "/src/app.ts"
                },
                "last_modified": {
                    "type": "string",
                    "example": "2023-01-01T10:00:00Z"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ProjectRecentFileSession"
                    }
                },
                "tools_used": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"Edit\"",
                        " \"Write\"]"
                    ]
                },
                "total_modifications": {
                    "type": "integer",
                    "example": 8
                }
            }
        },
        "api.ProjectRecentFileSession": {
            "description": "Session information for a file modification",
            "type": "object",
            "properties": {
                "git_branch": {
                    "type": "string",
                    "example": "feature/auth"
                },
                "session_id": {
                    "type": "string",
                    "example": "session_123456"
                },
                "session_title": {
                    "type": "string",
                    "example": "Implement user authentication"
                }
            }
        },
        "api.ProjectRecentFilesResponse": {
            "description": "Response containing recently modified files for a specific project",
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ProjectRecentFile"
                    }
                },
                "project_name": {
                    "type": "string",
                    "example": "my-app"
                },
                "total": {
                    "type": "integer",
                    "example": 45
                }
            }
        },
        "api.RecentFile": {
            "description": "Recently modified file information",
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "example": "/src/app.ts"
                },
                "git_branch": {
                    "type": "string",
                    "example": "feature/auth"
                },
                "last_modified": {
                    "type": "string",
                    "example": "2023-01-01T10:00:00Z"
                },
                "occurrences": {
                    "type": "integer",
                    "example": 5
                },
                "project_name": {
                    "type": "string",
                    "example": "my-app"
                },
                "project_path": {
                    "type": "string",
                    "example": "/Users/ksred/projects/my-app"
                },
                "session_id": {
                    "type": "string",
                    "example": "session_123456"
                },
                "session_title": {
                    "type": "string",
                    "example": "Implement user authentication"
                },
                "tool_name": {
                    "type": "string",
                    "example": "Edit"
                }
            }
        },
        "api.RecentFilesResponse": {
            "description": "Response containing recently modified files",
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.RecentFile"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 20
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "total": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "api.SearchResponse": {
            "description": "Search results with query information",
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "example": "authentication"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SessionResponse"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "api.SessionResponse": {
            "description": "Session information with metadata and statistics",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T10:00:00Z"
                },
                "current_task": {
                    "type": "string",
                    "example": "Implement user authentication"
                },
                "duration_seconds": {
                    "type": "integer",
                    "example": 5400
                },
                "files_modified": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"/src/auth.go\"",
                        "\"/src/user.go\"]"
                    ]
                },
                "git_branch": {
                    "type": "string",
                    "example": "feature/auth"
                },
                "git_worktree": {
                    "type": "string",
                    "example": "main"
                },
                "id": {
                    "type": "string",
                    "example": "session_123456"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "message_count": {
                    "type": "integer",
                    "example": 25
                },
                "model": {
                    "type": "string",
                    "example": "claude-3-opus"
                },
                "project_name": {
                    "type": "string",
                    "example": "my-awesome-project"
                },
                "project_path": {
                    "type": "string",
                    "example": "/home/user/my-project"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "idle",
                        "completed",
                        "error"
                    ],
                    "example": "active"
                },
                "title": {
                    "type": "string",
                    "example": "Implement user authentication"
                },
                "tokens_used": {
                    "$ref": "#/definitions/claude.TokenUsage"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T11:30:00Z"
                }
            }
        },
        "api.SessionsLimitResponse": {
            "description": "List of sessions with limit info",
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SessionResponse"
                    }
                }
            }
        },
        "api.SessionsResponse": {
            "description": "List of sessions with pagination info",
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SessionResponse"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "api.TimeSeriesEntry": {
            "description": "Analytics data for a specific time period",
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2024-01-08"
                },
                "messages": {
                    "type": "integer",
                    "example": 145
                },
                "models": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/api.TimeSeriesModelData"
                    }
                },
                "sessions": {
                    "type": "integer",
                    "example": 12
                },
                "total_cost": {
                    "type": "number",
                    "example": 2.5
                },
                "total_tokens": {
                    "type": "integer",
                    "example": 125000
                }
            }
        },
        "api.TimeSeriesModelData": {
            "description": "Model usage data for a specific time period",
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "integer",
                    "example": 3
                },
                "tokens": {
                    "type": "integer",
                    "example": 75000
                }
            }
        },
        "api.TimeSeriesResponse": {
            "description": "Time series analytics data",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.TimeSeriesEntry"
                    }
                },
                "period": {
                    "type": "string",
                    "enum": [
                        "day",
                        "week",
                        "month"
                    ],
                    "example": "day"
                }
            }
        },
        "api.TokenBreakdown": {
            "description": "Detailed token usage breakdown",
            "type": "object",
            "properties": {
                "cached": {
                    "type": "integer",
                    "example": 180000
                },
                "fresh": {
                    "type": "integer",
                    "example": 270000
                },
                "total": {
                    "type": "integer",
                    "example": 450000
                }
            }
        },
        "api.TokenTimelineEntry": {
            "description": "Token usage data for a specific time period",
            "type": "object",
            "properties": {
                "cache_creation_tokens": {
                    "type": "integer",
                    "example": 5000
                },
                "cache_read_tokens": {
                    "type": "integer",
                    "example": 3000
                },
                "estimated_cost": {
                    "type": "number",
                    "example": 0.75
                },
                "input_tokens": {
                    "type": "integer",
                    "example": 15000
                },
                "message_count": {
                    "type": "integer",
                    "example": 12
                },
                "output_tokens": {
                    "type": "integer",
                    "example": 8000
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-08T14:00:00Z"
                },
                "total_tokens": {
                    "type": "integer",
                    "example": 31000
                }
            }
        },
        "api.TokenTimelineResponse": {
            "description": "Response containing token usage timeline data",
            "type": "object",
            "properties": {
                "granularity": {
                    "type": "string",
                    "example": "hour"
                },
                "hours": {
                    "type": "integer",
                    "example": 24
                },
                "project_name": {
                    "type": "string",
                    "example": "my-app"
                },
                "session_id": {
                    "type": "string",
                    "example": "session_123456"
                },
                "timeline": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.TokenTimelineEntry"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 24
                }
            }
        },
        "api.UsageStats": {
            "description": "Usage statistics and analytics",
            "type": "object",
            "properties": {
                "daily_sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.DailySessionCount"
                    }
                },
                "model_usage": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "peak_hours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.PeakHourInfo"
                    }
                }
            }
        },
        "api.WebSocketMessage": {
            "description": "WebSocket message structure for real-time updates",
            "type": "object",
            "properties": {
                "data": {},
                "session_id": {
                    "type": "string",
                    "example": "session_123456"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T10:00:00Z"
                },
                "type": {
                    "type": "string",
                    "example": "session_update"
                }
            }
        },
        "claude.TokenUsage": {
            "type": "object",
            "properties": {
                "cache_creation_input_tokens": {
                    "type": "integer"
                },
                "cache_read_input_tokens": {
                    "type": "integer"
                },
                "estimated_cost": {
                    "type": "number"
                },
                "input_tokens": {
                    "type": "integer"
                },
                "output_tokens": {
                    "type": "integer"
                },
                "total_tokens": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "x-extension-openapi": "{\"example\": \"value\"}"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Claude Session Manager API",
	Description:      "A comprehensive API for managing and monitoring Claude.ai sessions with real-time analytics and insights.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
